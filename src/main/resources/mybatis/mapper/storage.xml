<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="storage">
	<select id="getList" parameterType="Storage" resultType="Storage">
		<if test="fs_pid != 'root'">
			select * from file_system where fs_pid = #{fs_pid} and users_id = #{users_id} 
			order by DECODE (type, 'd', 1, 'f', 2), name asc, regdate asc
		</if>
		<if test="fs_pid == 'root'">
			select * from file_system where fs_pid is null and users_id = #{users_id} 
			order by DECODE (type, 'd', 1, 'f', 2), name asc, regdate asc
		</if>
	</select>
	
	<select id="moveSubDir" parameterType="Storage" resultType="Storage">
		select * from file_system where users_id = #{users_id} and fs_pid = #{fs_uid}
	</select>
	
	<select id="getParentDir" parameterType="Storage" resultType="Storage">
		select * from file_system where users_id = #{users_id} and fs_uid = #{fs_pid}
	</select>
	
	<insert id="makeDir" parameterType="Storage">
		<if test="fs_pid != 'root'">
			insert into file_system values(#{users_id}, #{fs_uid}, #{fs_pid}, #{name}, 'd', sysdate)
		</if>
		<if test="fs_pid == 'root'">
			insert into file_system values(#{users_id}, #{fs_uid}, null, #{name}, 'd', sysdate)
		</if>
	</insert>
	
	<select id="uidDualCheck" parameterType="String" resultType="Storage">
		select * from file_system where fs_uid = #{value}
	</select>
	
	<select id="fsDupCheck" parameterType="Storage" resultType="Storage">
		<if test="fs_pid != 'root'">
			select * from file_system where fs_pid = #{fs_pid} and name = #{name}
		</if>
		<if test="fs_pid == 'root'">
			select * from file_system where fs_pid is null and name = #{name}
		</if>
	</select>
	
	<insert id="saveFile" parameterType="Storage">
		<if test="fs_pid != 'root'">
			insert into file_system values(#{users_id}, #{fs_uid}, #{fs_pid}, #{name}, 'f', sysdate)
		</if>
		<if test="fs_pid == 'root'">
			insert into file_system values(#{users_id}, #{fs_uid}, null, #{name}, 'f', sysdate)
		</if>
	</insert>
	
	<delete id="delete" parameterType="String">
		delete from file_system where fs_uid = #{value}
	</delete>
	
	<select id="getParent_name" parameterType="String" resultType="Storage">
		select * from file_system where fs_uid = #{value}
	</select>
	
	<update id="fileNameUpdate" parameterType="Storage">
		<if test="fs_pid != 'root'">
			update file_system set name = #{name} where users_id = #{users_id} and
																								fs_uid = #{fs_uid} and
																								fs_pid = #{fs_pid}
		</if>
		<if test="fs_pid == 'root'">
			update file_system set name = #{name} where users_id = #{users_id} and
																								fs_uid = #{fs_uid} and
																								fs_pid is null
		</if>
		
	</update>
	
	<select id="checkLocation" parameterType="Storage" resultType="Storage">
		<if test="fs_pid != 'root'">
			select * from file_system where fs_pid = #{fs_pid} and users_id = #{users_id}
		</if>
		<if test="fs_pid == 'root'">
			select * from file_system where fs_pid is null and users_id = #{users_id}
		</if>
	</select>
</mapper>



